# Example usage, in .bash_profile, etc.:
#   # non-standard homebrew prefix
#   alias osgeo4mac-env='source /usr/local/osgeo4mac/Library/Taps/osgeo/homebrew-osgeo4mac/enviro/osgeo4mac.env'
#   OR, standard homebrew /usr/local prefix
#   alias osgeo4mac-env="source $(brew --prefix)/Library/Taps/osgeo/homebrew-osgeo4mac/enviro/osgeo4mac.env"

# Use this variable to differentiate between custom and normal prefix in downstream environs.
# For example, in your .bash_profile, which gets sourced when doing `brew sh` you can:
#   if [ ${HOMEBREW_BREW_FILE+x} ] && [ ${OSGEO4MAC+x} ] ; then
#     # HOMEBREW_BREW_FILE is set, and using osgeo4mac setup: fix bloated PATH
#     export PATH=/new/prepended/paths:/usr/X11/bin:/usr/bin:/bin:/usr/sbin
#   fi
export OSGEO4MAC=1

# Alternative method for finding 'sourced' file path
# CMD="import os, sys; print os.path.realpath(\"${BASH_SOURCE[0]}\")"
# SCRIPT_PATH="$(/usr/bin/python -c "$CMD" )"

# Starting from within homebrew tapped directory
ENVIRO_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd -P)

BREW_TAP=$(dirname $ENVIRO_DIR)
if ! [ -d "$BREW_TAP" ]; then
  echo "Homebrew tap not found: $BREW_TAP"
  exit 1
fi

BREW_PREFIX=$(dirname $(dirname $(dirname $(dirname $BREW_TAP ) ) ) )
if ! [ -d "$BREW_PREFIX" ]; then
  echo "Homebrew prefix not found: $BREW_PREFIX"
  exit 1
fi

echo "Homebrew prefix: $BREW_PREFIX"
echo "Homebrew tap is: $BREW_TAP"
echo "osgeo4mac enviro: $ENVIRO_DIR"

export MANPATH=$BREW_PREFIX/share/man:$MANPATH
export PATH=$BREW_PREFIX/bin:$BREW_PREFIX/sbin:$BREW_PREFIX/Library/Taps/osgeo/homebrew-osgeo4mac/cmd::/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/X11/bin
# Setting PYTHONHOME tends to break some builds when using `brew sh`
# export PYTHONHOME=$BREW_PREFIX/Frameworks/Python.framework/Versions/2.7
export PYTHONPATH=$BREW_PREFIX/lib/python2.7/site-packages
export PYTHONSTARTUP=$ENVIRO_DIR/python_startup.py
export GDAL_DRIVER_PATH=$BREW_PREFIX/lib/gdalplugins
export OSG_LIBRARY_PATH=$BREW_PREFIX/lib/osgPlugins-3.4.0

# Doesn't work very well for GDAL PGeo driver, use Java-based Access MDB driver instead
# export ODBCSYSINI=$BREW_PREFIX/etc/
# export MDBDRIVER_PATH=$BREW_PREFIX/lib

if [ -d $BREW_PREFIX/etc/bash_completion ]; then
  source $BREW_PREFIX/etc/bash_completion
fi

# Append any user env settings
if [ -f $HOME/.osgeo4mac.env ]; then
  source $HOME/.osgeo4mac.env
fi

cd $BREW_PREFIX
